@use '@angular/material' as mat;

// Define the primary palette #ff4c00 as main
$my-primary: mat.define-palette((50: #ffe8e0,
            100: #ffc6b3,
            200: #ffa180,
            300: #ff7b4d,
            400: #ff5f26,
            500: #ff4c00,
            600: #e64500,
            700: #cc3d00,
            800: #b33600,
            900: #802600,
            contrast: (50: #000000,
                100: #000000,
                200: #000000,
                300: #000000,
                400: #ffffff,
                500: #ffffff,
                600: #ffffff,
                700: #ffffff,
                800: #ffffff,
                900: #ffffff,
            )));

// Define accent & warn
$my-accent: mat.define-palette(mat.$green-palette, A200, A100, A400);
$my-warn: mat.define-palette(mat.$red-palette);

// Create a dark theme object
$my-dark-theme: mat.define-dark-theme((color: (primary: $my-primary,
                accent: $my-accent,
                warn: $my-warn,
            ),
        ));

// Material core styles
@include mat.core();

// Apply Material theme to all Material components
@include mat.all-component-themes($my-dark-theme);

// Export theme colors as CSS variables for everything else
:root {
    --color-primary: #{mat.get-color-from-palette($my-primary)};
    --color-accent: #{mat.get-color-from-palette($my-accent)};
    --color-warn: #{mat.get-color-from-palette($my-warn)};
    --color-bg: #{mat.get-color-from-palette(mat.$grey-palette, 900)}; //#1d1d1d
    --color-surface: #{mat.get-color-from-palette(mat.$grey-palette, 800)};
    --color-surface-1: #{mat.get-color-from-palette(mat.$grey-palette, 700)};
    --color-text: #{mat.get-color-from-palette(mat.$grey-palette, 300)};
}